{"version":3,"sources":["../node_modules/d3-scale/src/quantize.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","../node_modules/d3-array/src/quantile.js","../node_modules/d3-scale/src/quantile.js","../node_modules/@vx/pattern/esm/patterns/Pattern.js","../node_modules/@vx/pattern/esm/constants/index.js","../node_modules/@vx/pattern/esm/patterns/Lines.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-scale/src/linear.js"],"names":["quantize","unknown","x0","x1","n","domain","range","scale","x","bisect","rescale","i","Array","_","arguments","length","from","slice","invertExtent","y","indexOf","NaN","thresholds","copy","initRange","apply","linearish","EOL","EOF","objectConverter","columns","Function","map","name","JSON","stringify","join","inferColumns","rows","columnSet","Object","create","forEach","row","column","push","pad","value","width","s","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","f","t","N","I","eof","eol","token","c","j","replace","preformatBody","formatValue","formatRow","Date","test","parse","convert","object","customConverter","format","concat","formatBody","formatRows","csv","dsv","csvParse","tsv","tsvParse","responseText","response","ok","Error","status","statusText","input","init","fetch","then","dsvParse","undefined","quantileSorted","values","p","valueof","number","i0","Math","floor","value0","value1","quantile","max","threshold","d","sort","ascending","quantiles","Pattern","_ref","id","height","children","React","createElement","patternUnits","propTypes","_pt","string","isRequired","node","PatternOrientation","pathForOrientation","orientation","Lines","_ref2","stroke","strokeWidth","strokeDasharray","_ref2$strokeLinecap","strokeLinecap","_ref2$shapeRendering","shapeRendering","_ref2$orientation","background","className","orientations","isArray","cx","fill","o","key","oneOfType","oneOf","array","delta","compare","left","a","lo","hi","mid","ascendingComparator","center","right","ascendingBisect","bisector","bisectRight","b","this","numbers","index","e10","sqrt","e5","e2","tickIncrement","start","stop","count","step","power","log","LN10","error","pow","min","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","setTime","k","constant","color","rgb","numberArray","valueOf","toString","round","unit","identity","normalize","bimap","interpolate","d0","d1","r0","r1","polymap","r","reverse","source","target","clamp","transformer","transform","untransform","piecewise","output","interpolateValue","clamper","invert","interpolateNumber","rangeRound","interpolateRound","u","continuous","re","formatSpecifier","specifier","match","exec","FormatSpecifier","align","sign","symbol","zero","comma","precision","trim","type","prototype","formatDecimalParts","toExponential","coefficient","prefixExponent","locale","formatPrefix","abs","exponent","toFixed","toLocaleString","toPrecision","formatRounded","toUpperCase","prefixes","grouping","thousands","group","call","Number","g","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","formatTypes","prefix","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","i1","formatTrim","Infinity","padding","e","formatLocale","tickFormat","step0","step1","tickStep","precisionPrefix","precisionRound","precisionFixed","ticks","isFinite","nice","prestep","maxIter","ceil","linear"],"mappings":"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","file":"static/js/69.bfe299fd.chunk.js","sourcesContent":["import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {ascending, bisect, quantileSorted as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import _pt from \"prop-types\";\nimport React from 'react';\nexport default function Pattern(_ref) {\n  var id = _ref.id,\n      width = _ref.width,\n      height = _ref.height,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"pattern\", {\n    id: id,\n    width: width,\n    height: height,\n    patternUnits: \"userSpaceOnUse\"\n  }, children));\n}\nPattern.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  children: _pt.node.isRequired\n};","export var PatternOrientation = {\n  horizontal: 'horizontal',\n  vertical: 'vertical',\n  diagonal: 'diagonal',\n  diagonalRightToLeft: 'diagonalRightToLeft'\n};","import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nimport { PatternOrientation } from '../constants';\nexport function pathForOrientation(_ref) {\n  var height = _ref.height,\n      orientation = _ref.orientation;\n\n  switch (orientation) {\n    case PatternOrientation.vertical:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n\n    case PatternOrientation.horizontal:\n      return \"M 0,\" + height / 2 + \" l \" + height + \",0\";\n\n    case PatternOrientation.diagonal:\n      return \"M 0,\" + height + \" l \" + height + \",\" + -height + \" M \" + -height / 4 + \",\" + height / 4 + \" l \" + height / 2 + \",\" + -height / 2 + \"\\n             M \" + 3 / 4 * height + \",\" + 5 / 4 * height + \" l \" + height / 2 + \",\" + -height / 2;\n\n    case PatternOrientation.diagonalRightToLeft:\n      return \"M 0,0 l \" + height + \",\" + height + \"\\n        M \" + -height / 4 + \",\" + 3 / 4 * height + \" l \" + height / 2 + \",\" + height / 2 + \"\\n        M \" + 3 / 4 * height + \",\" + -height / 4 + \" l \" + height / 2 + \",\" + height / 2;\n\n    default:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n  }\n}\nexport default function Lines(_ref2) {\n  var id = _ref2.id,\n      width = _ref2.width,\n      height = _ref2.height,\n      stroke = _ref2.stroke,\n      strokeWidth = _ref2.strokeWidth,\n      strokeDasharray = _ref2.strokeDasharray,\n      _ref2$strokeLinecap = _ref2.strokeLinecap,\n      strokeLinecap = _ref2$strokeLinecap === void 0 ? 'square' : _ref2$strokeLinecap,\n      _ref2$shapeRendering = _ref2.shapeRendering,\n      shapeRendering = _ref2$shapeRendering === void 0 ? 'auto' : _ref2$shapeRendering,\n      _ref2$orientation = _ref2.orientation,\n      orientation = _ref2$orientation === void 0 ? ['vertical'] : _ref2$orientation,\n      background = _ref2.background,\n      className = _ref2.className;\n  var orientations = Array.isArray(orientation) ? orientation : [orientation];\n  return /*#__PURE__*/React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && /*#__PURE__*/React.createElement(\"rect\", {\n    className: cx('vx-pattern-line-background'),\n    width: width,\n    height: height,\n    fill: background\n  }), orientations.map(function (o, i) {\n    return /*#__PURE__*/React.createElement(\"path\", {\n      key: \"vx-\" + id + \"-line-\" + o + \"-\" + i,\n      className: cx('vx-pattern-line', className),\n      d: pathForOrientation({\n        orientation: o,\n        height: height\n      }),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      strokeLinecap: strokeLinecap,\n      shapeRendering: shapeRendering\n    });\n  }));\n}\nLines.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number]),\n  orientation: _pt.array\n};","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n"],"sourceRoot":""}